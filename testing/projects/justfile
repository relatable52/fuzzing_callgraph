set shell := ["bash", "-uc"]

# Export DOCKER_BUILDKIT
export DOCKER_BUILDKIT := "1"

# Define BASE_DIR
BASE_DIR := absolute_path("../")

# Define PROJECTS
PROJECTS := `ls -d projects/*/ | xargs -n 1 basename`

DATA := "{{BASE_DIR}}/fuzzing_data"

FUZZING_THREADS := "2"
FUZZING_TIME := "120"

DISABLED_HOOKS:= "com.code_intelligence.jazzer.sanitizers.ReflectiveCall:com.code_intelligence.jazzer.sanitizers.SqlInjection:com.code_intelligence.jazzer.sanitizers.ServerSideRequestForgery"

load_env PROJECT:
    set -a; source "{{BASE_DIR}}/projects/{{PROJECT}}/.env"; set +a

# Recipe to build Jazzer Docker image
build_jazzer_image:
    docker build -t jazzer -f {{BASE_DIR}}/jazzer-linux/Dockerfile {{BASE_DIR}}/jazzer-linux

# Recipe to build JCG Docker image
build_jcg_image:
    docker build -t jcg -f {{BASE_DIR}}/jcg/Dockerfile {{BASE_DIR}}/jcg

# Recipe to build project JAR
build_jar PROJECT:
    echo "Building project {{PROJECT}}"
    mkdir -p "{{DATA}}/{{PROJECT}}"
    mkdir -p "{{DATA}}/{{PROJECT}}/target"
    cd projects/{{PROJECT}}
    docker build --output={{DATA}}/{{PROJECT}} -t {{PROJECT}} .

# Recipe to fuzz project
fuzz PROJECT: (build_jar PROJECT) (load_env PROJECT) build_jazzer_image
    echo "Fuzzing project {{PROJECT}}"

    export PROJECT_PATH="{{DATA}}/{{PROJECT}}"
    export TARGET_PATH="$PROJECT_PATH/target"

    mkdir -p "$TARGET_PATH/fuzzing/fuzzing-coverage" \
    "$TPROJECT_PATH/resources"

    touch "$TARGET/fuzzing/sync_file" \
    "$TARGET/fuzzing/fuzzing-coverage/coverage.exec" \

    docker rm -f "{{PROJECT}}-fuzzer"
    docker run -it \
        --name "{{PROJECT}}-fuzzer" \
        --mount type=bind,source="$PROJECT_PATH/repo",target=/repo, readonly \
        --mount type=bind,source="$PROJECT_PATH/resources/",target=/resources/,readonly \
        --mount type=bind,source="$TARGET/fuzzing/fuzzing_coverage/coverage.exec",target=/fuzzing/coverage.exec \
        --mount type=bind,source="$TARGET/fuzzing/sync_file",target=/fuzzing/sync_file \
        jazzer \
        --cp=$(find "$TPROJECT_PATH/repo" -name '*.jar' -type f -printf '/repo/%f '  | xargs echo | tr ' ' ':') \
        --target_class=$FUZZER \
        --instrumentation_includes=$INSTRUMENT_CLASSES \
        --disabled_hooks={{DISABLED_HOOKS}} \
        --id_sync_file=/fuzzing/sync_file \
        -max_total_time={{FUZZING_TIME}} \
        -fork={{FUZZING_THREADS}} \
        -max_len=100000 \
        -timeout=60
