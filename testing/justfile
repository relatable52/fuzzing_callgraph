CALLGRAPH:= env("CALLGRAPH")

TO_RUN := "projects/to_run.txt"
LOG_FILE := CALLGRAPH / "run_log.txt"
TEST_LOG_FILE := CALLGRAPH / "test_log.txt"

run_select:
    #!/bin/bash
    # Ensure the file exists
    if [[ ! -f "{{TO_RUN}}" ]]; then
        echo "Error: {{TO_RUN}} not found!" | tee -a "{{LOG_FILE}}"
        exit 1
    fi

    # Log the start of the script
    echo "Script started at $(date)" | tee -a "{{LOG_FILE}}"

    # Read and process each program
    while IFS= read -r program || [[ -n "$program" ]]; do
        # Trim potential carriage returns
        program=$(echo "$program" | tr -d '\r')

        # Skip empty lines
        [[ -z "$program" ]] && continue

        # Log the program being run
        echo "Running program: $program at $(date)" | tee -a "{{LOG_FILE}}"

        # Run the just command
        just --dotenv-path "$program/.env" projects/coverage_seed
        just --dotenv-path "$program/.env" projects/static_callgraphs
        
        # Run fuzzing 5 times
        for i in {1..5}; do
            just --dotenv-path "$program/.env" projects/coverage_fuzzing
        done

        # Run fuzzing_seed 12 times
        for i in {1..12}; do
            just --dotenv-path "$program/.env" projects/coverage_fuzzing_seed
        done

        # Run dynamic callgraph fuzzing
        just --dotenv-path "$program/.env" projects/dynamic_callgraph_fuzzing_seed
        just --dotenv-path "$program/.env" projects/dynamic_callgraph_fuzzing

        # Log completion of the program
        echo "Finished program: $program at $(date)" | tee -a "{{LOG_FILE}}"
    done <"{{TO_RUN}}"

run_test:
    #!/bin/bash
    # Ensure the file exists
    if [[ ! -f "{{TO_RUN}}" ]]; then
        echo "Error: {{TO_RUN}} not found!" | tee -a "{{TEST_LOG_FILE}}"
        exit 1
    fi

    # Log the start of the script
    echo "Script started at $(date)" | tee -a "{{TEST_LOG_FILE}}"

    # Read and process each program
    while IFS= read -r program || [[ -n "$program" ]]; do
        # Trim potential carriage returns
        program=$(echo "$program" | tr -d '\r')

        # Skip empty lines
        [[ -z "$program" ]] && continue

        # Log the program being run
        echo "Running program: $program at $(date)" | tee -a "{{TEST_LOG_FILE}}"

        # Run the just command
        just --dotenv-path "$program/.env" projects/coverage_seed || true

        # Log completion of the program
        echo "Finished program: $program at $(date)" | tee -a "{{TEST_LOG_FILE}}"

    done <"{{TO_RUN}}"

    # Log the end of the script
    echo "Script ended at $(date)" | tee -a "{{TEST_LOG_FILE}}"
   